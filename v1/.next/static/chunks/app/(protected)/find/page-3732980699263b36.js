(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[594],{3077:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>A});var a=r(5155),s=r(445),l=r(8776),n=r(7618),i=r(6467),u=r(527),c=r(2115),h=r(5145),d=r(8637),o=r.n(d),g=r(6874),v=r.n(g),m=r(8557),p=r(6766);let x=e=>{let{user:t}=e;return(0,a.jsxs)(m.A,{xxl:6,children:[(0,a.jsx)(p.default,{width:150,height:150,src:t.avatar_url,alt:"user_avatar"}),(0,a.jsx)("div",{children:t.login}),(0,a.jsx)(v(),{href:"/user?userName=".concat(t.login),children:"More"})]})};x.propTypes={user:o().object.isRequired},x.defaultProps={user:{id:4,login:"wematu",avatar_url:"https://avatars.githubusercontent.com/u/1?v=4",html_url:"https://github.com/mojombo"}};var j=r(2960),b=r(54),f=r.n(b),w=r(4454);let y=e=>{let[t,r]=(0,c.useState)(e);return(0,c.useEffect)(()=>{let t=f().debounce(()=>{r(e)},1500);return t(),()=>t.cancel()},[e]),(0,j.I)({queryKey:["search-github-users",t],queryFn:()=>(0,w.T)(t),enabled:!!t})};function A(){var e,t,r;let{token:d}=s.A.useToken(),[o,g]=(0,c.useState)(""),v=y(o);return(0,a.jsxs)(l.A,{vertical:!0,align:"center",children:[(0,a.jsx)(l.A,{vertical:!0,style:{width:"50vw",maxWidth:"500px"},gap:d.marginXS,children:(0,a.jsx)(n.A,{type:"text",name:"search",id:"search",allowClear:!0,value:o,onChange:e=>g(e.target.value),placeholder:"Search for github users",style:{padding:d.paddingSM}})}),v.isLoading?(0,a.jsx)(l.A,{wrap:!0,align:"center",justify:"center",style:{minHeight:"75vh"},children:(0,a.jsx)(i.A,{size:"large",tip:" ",children:(0,a.jsx)(h.A,{level:5,children:"Loading"})})}):o?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(h.A,{level:4,children:["Results (",(null==(e=v.data)?void 0:e.total_count)||0,")"]}),(0,a.jsx)(u.A,{justify:"center",align:"middle",gutter:d.marginSM,style:{maxWidth:"70vw",maxHeight:"65vh",overflow:"scroll"},children:null==(r=v.data)||null==(t=r.items)?void 0:t.map(e=>(0,a.jsx)(x,{user:e},e.id))})]}):(0,a.jsx)(h.A,{level:4,children:"Enter search term to begin"})]})}},4454:(e,t,r)=>{"use strict";r.d(t,{T:()=>a,b:()=>s});let a=async e=>{let t=await fetch("https://api.github.com/search/users?q=".concat(e));return await t.json()},s=async e=>{let t=await fetch("https://api.github.com/users/".concat(e));return await t.json()}},9406:(e,t,r)=>{Promise.resolve().then(r.bind(r,3077))}},e=>{var t=t=>e(e.s=t);e.O(0,[935,279,8,967,4,759,441,684,358],()=>t(9406)),_N_E=e.O()}]);